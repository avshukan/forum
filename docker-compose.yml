version: '3.8'
services:
  forum_frontend:
    container_name: forum_frontend
    image: 'forum_frontend'
    build:
      context: ./client
      args:
        # NODE_ENV: ${NODE_ENV}
        REACT_APP_API_URL: ${REACT_APP_API_URL}
        REACT_APP_API_BASE: ${REACT_APP_API_BASE}
    ports:
      - '3000:3000'
    restart: always
    depends_on:
      - forum_backend

  forum_frontend_tmp:
    container_name: forum_frontend_tmp
    image: 'forum_frontend_tmp'
    build:
      context: ./client
      dockerfile: DockerfileTmp
      args:
        # NODE_ENV: ${NODE_ENV}
        REACT_APP_API_URL: ${REACT_APP_API_URL}
        REACT_APP_API_BASE: ${REACT_APP_API_BASE}
    ports:
      - '3000:3000'
    restart: always

  forum_backend:
    container_name: forum_backend
    image: 'forum_backend'
    build:
      context: ./server
      args:
        NODE_ENV: ${NODE_ENV}
        POSTGRES_HOSTNAME: ${POSTGRES_HOSTNAME}
        POSTGRES_DATABASE: ${POSTGRES_DATABASE}
        POSTGRES_USERNAME: ${POSTGRES_USERNAME}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        PORT: ${PORT}
        CORS_HOSTNAME: ${CORS_HOSTNAME}
        JWT_KEY: ${JWT_KEY}
    ports:
      - '5000:5000'
    restart: always
    depends_on:
      - forum_db

  forum_db:
    container_name: forum_db
    hostname: postgres
    image: 'postgres:13'
    ports:
      - '5432:5432'
    env_file: .env
    restart: always
    volumes:
      - fastify_volume:/var/lib/postgres/data

volumes:
  fastify_volume: {}
